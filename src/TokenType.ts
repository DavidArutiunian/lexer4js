export enum TokenType {
  BLOCK_COMMENT = "BLOCK_COMMENT",
  BLOCK_COMMENT_UNTERMINATED = "BLOCK_COMMENT_UNTERMINATED",
  LINE_COMMENT = "LINE_COMMENT",
  WHITE_SPACE = "WHITE_SPACE",
  TAB = "TAB",
  NEW_LINE = "NEW_LINE",
  CLOSING_BRACE = "CLOSING_BRACE",
  OPENING_BRACE = "OPENING_BRACE",
  OPENING_CURLY_BRACE = "OPENING_CURLY_BRACE",
  CLOSING_CURLY_BRACE = "CLOSING_CURLY_BRACE",
  SCIENTIFIC_LITERAL = "SCIENTIFIC_LITERAL",
  OCTAL_LITERAL = "OCTAL_LITERAL",
  DOUBLE_LITERAL = "DOUBLE_LITERAL",
  // FLOAT_LITERAL = "FLOAT_LITERAL",
  INT_LITERAL = "INT_LITERAL",
  HEX_LITERAL = "HEX_LITERAL",
  BINARY_LITERAL = "BINARY_LITERAL",
  ADDITION = "ADDITION",
  SUBTRACTION = "SUBTRACTION",
  MULTIPLICATION = "MULTIPLICATION",
  DIVISION = "DIVISION",
  XOR = "XOR",
  POINT = "POINT",
  EQUALS = "EQUALS",
  NOT_EQUALS = "NOT_EQUALS",
  ASSIGNMENT = "ASSIGNMENT",
  MORE = "MORE",
  LESS = "LESS",
  AND = "AND",
  OR = "OR",
  STATIC = "STATIC",
  PUBLIC = "PUBLIC",
  PRIVATE = "PRIVATE",
  INT = "INT",
  CHAR = "CHAR",
  STRING = "STRING",
  DOUBLE = "DOUBLE",
  // FLOAT = "FLOAT",
  BOOLEAN = "BOOLEAN",
  VOID = "VOID",
  FALSE = "FALSE",
  TRUE = "TRUE",
  NULL = "NULL",
  RETURN = "RETURN",
  NEW = "NEW",
  CLASS = "CLASS",
  IF = "IF",
  WHILE = "WHILE",
  FOR = "FOR",
  ELSE = "ELSE",
  SEMICOLON = "SEMICOLON",
  COLON = "COLON",
  COMMA = "COMMA",
  IDENTIFIER = "IDENTIFIER",
  OPENING_SQUARE_BRACE = "OPENING_SQUARE_BRACE",
  CLOSING_SQUARE_BRACE = "CLOSING_SQUARE_BRACE",
  VAR = "VAR",
  FINAL = "FINAL",
  MULTILINE_STRING_LITERAL = "MULTILINE_STRING_LITERAL",
  STRING_LITERAL = "STRING_LITERAL",
  CHAR_LITERAL = "CHAR_LITERAL",
}

export function isTokenAuxiliary(token: TokenType): boolean {
  return (
    token == TokenType.BLOCK_COMMENT ||
    token == TokenType.LINE_COMMENT ||
    token == TokenType.NEW_LINE ||
    token == TokenType.TAB ||
    token == TokenType.WHITE_SPACE
  );
}

export default TokenType;
