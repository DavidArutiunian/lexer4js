// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lexer should match snapshot 1`] = `
"CLASS 'class' [L1:0]
IDENTIFIER 'Foo' [L1:6]
OPENING_CURLY_BRACE '{' [L1:10]
PRIVATE 'private' [L2:4]
DOUBLE 'double' [L2:12]
IDENTIFIER 'big' [L2:19]
ASSIGNMENT '=' [L2:23]
SCIENTIFIC_LITERAL '3.2e+23' [L2:25]
SEMICOLON ';' [L2:32]
PRIVATE 'private' [L3:4]
DOUBLE 'double' [L3:12]
IDENTIFIER 'small' [L3:19]
ASSIGNMENT '=' [L3:25]
SUBTRACTION '-' [L3:27]
SCIENTIFIC_LITERAL '4.70e-9' [L3:28]
SEMICOLON ';' [L3:35]
PRIVATE 'private' [L5:4]
STRING 'string' [L5:12]
IDENTIFIER 'message' [L5:19]
ASSIGNMENT '=' [L5:27]
STRING_LITERAL '\\"FooBarBaz\\"' [L5:29]
SEMICOLON ';' [L5:40]
PRIVATE 'private' [L6:4]
CHAR 'char' [L6:12]
IDENTIFIER 'newline' [L6:17]
ASSIGNMENT '=' [L6:25]
CHAR_LITERAL ''\\\\n'' [L6:27]
SEMICOLON ';' [L6:31]
PRIVATE 'private' [L8:4]
INT 'int' [L8:12]
IDENTIFIER 'hex' [L8:16]
ASSIGNMENT '=' [L8:20]
HEX_LITERAL '0x0A0B0C' [L8:22]
SEMICOLON ';' [L8:30]
PRIVATE 'private' [L9:4]
INT 'int' [L9:12]
IDENTIFIER 'octal' [L9:16]
ASSIGNMENT '=' [L9:22]
OCTAL_LITERAL '0737' [L9:24]
SEMICOLON ';' [L9:28]
PRIVATE 'private' [L10:4]
INT 'int' [L10:12]
IDENTIFIER 'binary' [L10:16]
ASSIGNMENT '=' [L10:23]
BINARY_LITERAL '0b01001001110' [L10:25]
SEMICOLON ';' [L10:38]
PRIVATE 'private' [L12:4]
BOOLEAN 'boolean' [L12:12]
IDENTIFIER 'flag' [L12:20]
ASSIGNMENT '=' [L12:25]
FALSE 'false' [L12:27]
SEMICOLON ';' [L12:32]
PRIVATE 'private' [L14:4]
STRING 'string' [L14:12]
IDENTIFIER 'multiline' [L14:19]
ASSIGNMENT '=' [L14:29]
STRING_LITERAL '\\"\\"' [L14:31]
STRING_LITERAL '\\"
        Hello, World!
        Who I am?
    \\"' [L14:33]
STRING_LITERAL '\\"\\"' [L17:5]
SEMICOLON ';' [L17:7]
PUBLIC 'public' [L23:4]
VOID 'void' [L23:11]
IDENTIFIER 'main' [L23:16]
OPENING_BRACE '(' [L23:20]
STRING 'string' [L23:21]
OPENING_SQUARE_BRACE '[' [L23:27]
CLOSING_SQUARE_BRACE ']' [L23:28]
IDENTIFIER 'args' [L23:30]
CLOSING_BRACE ')' [L23:34]
OPENING_CURLY_BRACE '{' [L23:36]
INT 'int' [L24:8]
IDENTIFIER 'size' [L24:12]
ASSIGNMENT '=' [L24:17]
INT_LITERAL '3' [L24:19]
SEMICOLON ';' [L24:20]
INT 'int' [L25:8]
OPENING_SQUARE_BRACE '[' [L25:12]
IDENTIFIER 'size' [L25:13]
CLOSING_SQUARE_BRACE ']' [L25:17]
IDENTIFIER 'array' [L25:19]
ASSIGNMENT '=' [L25:25]
OPENING_CURLY_BRACE '{' [L25:27]
INT_LITERAL '1' [L25:29]
COMMA ',' [L25:30]
INT_LITERAL '2' [L25:32]
COMMA ',' [L25:33]
INT_LITERAL '3' [L25:35]
CLOSING_CURLY_BRACE '}' [L25:37]
SEMICOLON ';' [L25:38]
INT 'int' [L26:8]
IDENTIFIER 'index' [L26:12]
ASSIGNMENT '=' [L26:18]
INT_LITERAL '0' [L26:20]
SEMICOLON ';' [L26:21]
FLOAT 'float' [L27:8]
IDENTIFIER 'e' [L27:14]
ASSIGNMENT '=' [L27:16]
FLOAT_LITERAL '2.73' [L27:18]
SEMICOLON ';' [L27:22]
DOUBLE 'double' [L28:8]
IDENTIFIER 'a' [L28:15]
ASSIGNMENT '=' [L28:17]
FLOAT_LITERAL '3.1415926535' [L28:19]
SEMICOLON ';' [L28:31]
WHILE 'while' [L29:8]
OPENING_BRACE '(' [L29:14]
IDENTIFIER 'index' [L29:15]
NOT_EQUALS '!=' [L29:21]
INT_LITERAL '0' [L29:24]
CLOSING_BRACE ')' [L29:25]
OPENING_CURLY_BRACE '{' [L29:27]
IDENTIFIER 'index' [L30:12]
ASSIGNMENT '=' [L30:18]
IDENTIFIER 'index' [L30:20]
SUBTRACTION '-' [L30:26]
INT_LITERAL '1' [L30:28]
SEMICOLON ';' [L30:29]
IDENTIFIER 'var' [L31:12]
IDENTIFIER 'coefficient' [L31:16]
ASSIGNMENT '=' [L31:28]
IDENTIFIER 'big' [L31:30]
MULTIPLICATION '*' [L31:34]
IDENTIFIER 'small' [L31:36]
DIVISION '/' [L31:42]
IDENTIFIER 'hex' [L31:44]
SEMICOLON ';' [L31:47]
IDENTIFIER 'println' [L32:12]
OPENING_BRACE '(' [L32:19]
IDENTIFIER 'message' [L32:20]
COMMA ',' [L32:27]
IDENTIFIER 'array' [L32:29]
OPENING_SQUARE_BRACE '[' [L32:34]
IDENTIFIER 'index' [L32:35]
CLOSING_SQUARE_BRACE ']' [L32:40]
MULTIPLICATION '*' [L32:42]
IDENTIFIER 'coefficient' [L32:44]
COMMA ',' [L32:55]
IDENTIFIER 'newline' [L32:57]
CLOSING_BRACE ')' [L32:64]
SEMICOLON ';' [L32:65]
CLOSING_CURLY_BRACE '}' [L33:8]
FOR 'for' [L34:8]
OPENING_BRACE '(' [L34:12]
IDENTIFIER 'var' [L34:13]
IDENTIFIER 'num' [L34:17]
COLON ':' [L34:21]
IDENTIFIER 'array' [L34:23]
CLOSING_BRACE ')' [L34:28]
OPENING_CURLY_BRACE '{' [L34:30]
IDENTIFIER 'var' [L35:12]
IDENTIFIER 'coefficient' [L35:16]
ASSIGNMENT '=' [L35:28]
IDENTIFIER 'big' [L35:30]
MULTIPLICATION '*' [L35:34]
IDENTIFIER 'small' [L35:36]
DIVISION '/' [L35:42]
IDENTIFIER 'hex' [L35:44]
SEMICOLON ';' [L35:47]
IDENTIFIER 'println' [L36:12]
OPENING_BRACE '(' [L36:19]
IDENTIFIER 'message' [L36:20]
COMMA ',' [L36:27]
IDENTIFIER 'num' [L36:29]
MULTIPLICATION '*' [L36:33]
IDENTIFIER 'coefficient' [L36:35]
COMMA ',' [L36:46]
IDENTIFIER 'newline' [L36:48]
CLOSING_BRACE ')' [L36:55]
SEMICOLON ';' [L36:56]
CLOSING_CURLY_BRACE '}' [L37:8]
IDENTIFIER 'var' [L38:8]
IDENTIFIER 'secret' [L38:12]
ASSIGNMENT '=' [L38:19]
IDENTIFIER 'hex' [L38:21]
XOR '^' [L38:25]
IDENTIFIER 'octal' [L38:27]
XOR '^' [L38:33]
IDENTIFIER 'binary' [L38:35]
SEMICOLON ';' [L38:41]
IF 'if' [L39:8]
OPENING_BRACE '(' [L39:11]
IDENTIFIER 'flag' [L39:12]
AND '&&' [L39:17]
IDENTIFIER 'size' [L39:20]
OR '||' [L39:25]
IDENTIFIER 'secret' [L39:28]
CLOSING_BRACE ')' [L39:34]
OPENING_CURLY_BRACE '{' [L39:36]
IDENTIFIER 'println' [L40:10]
OPENING_BRACE '(' [L40:17]
IDENTIFIER 'secret' [L40:18]
XOR '^' [L40:25]
IDENTIFIER 'flag' [L40:27]
CLOSING_BRACE ')' [L40:31]
SEMICOLON ';' [L40:32]
CLOSING_CURLY_BRACE '}' [L41:8]
IDENTIFIER 'println' [L42:8]
OPENING_BRACE '(' [L42:15]
IDENTIFIER 'secret' [L42:16]
CLOSING_BRACE ')' [L42:22]
SEMICOLON ';' [L42:23]
CLOSING_CURLY_BRACE '}' [L43:4]
CLOSING_CURLY_BRACE '}' [L44:0]"
`;
